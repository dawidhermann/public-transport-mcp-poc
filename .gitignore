# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#workspace.xml
#tasks.xml
#usage.statistics.xml
#dictionaries
#shelf

#  Sensitive or high-churn files:
#dataSources/
#dataSources.local.xml
#sqlDataSources.xml
#dynamic.xml
#uiDesigner.xml
#dbnavigator.xml

# Gradle:
#gradle/
#.gradletasknamecache
#.gradle/
#build/

# CMake
#cmake-build-debug/
#cmake-build-release/

# Mongo Explorer plugin:
#.idea/**/mongoSettings.xml

# File-based project format:
#*.iws

# IntelliJ
#out/

# mpeltonen/sbt-idea plugin
#.idea_modules/

# JIRA plugin
#atlassian-ide-plugin.xml

# Cursive Clojure plugin
#.idea/replstate.xml

# SonarLint plugin
#.idea/sonarlint/

# Crashlytics plugin (for Android Studio and IntelliJ)
#com_crashlytics_export_strings.xml
#crashlytics.properties
#crashlytics-build.properties
#fabric.properties

# Editor-based Rest Client
#.idea/httpRequests

# Android studio 3.1+ serialized cache file
#.idea/caches/build_file_checksums.ser

# JetBrains templates
#**___jb_tmp___

# CodeStream plugin
#.idea/codestream.xml

# Azure Toolkit for IntelliJ plugin
#.idea/libraries/Maven__*.xml
#.idea/libraries/SBT__*.xml

# Scala IDE specific (Scala & Java)
#.cache-main
#.scala_dependencies
#.worksheet

# Uncomment these types if you want even more clean repository. But be careful.
# It can make harm to an existing project source code.
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.tiff
# *.ico
# *.pdf
# *.doc
# *.docx

# Cache files
# SASS cache
.sass-cache/

# Installshield
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# =========================
# Operating System Files
# =========================

# OSX
# =========================

.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear on external disk
.Spotlight-V100
.Trashes

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# =========================

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# =========================
# Docker
# =========================

# Docker volumes and data
docker-compose.override.yml
.docker/

# =========================
# Project Specific
# =========================

# Environment variables (contains secrets)
.env
.env.local
.env.production
.env.staging

# Data files - keep sample data, ignore large datasets
beam-data/*.gtfs
beam-data/*.zip
beam-data/large_datasets/
beam-data/downloads/
beam-data/processed/

# Keep small sample files
!beam-data/sample_*.csv
!beam-data/stops.csv
!beam-data/routes.csv

# Logs
logs/
*.log
*.log.*

# Temporary files
tmp/
temp/
.tmp/

# Database dumps
*.sql.gz
*.dump
backup/
dumps/

# Jupyter notebook outputs (optional - remove if you want to keep outputs)
*.ipynb

# Apache Beam temporary files
.beam/
beam-temp/

# Neo4j data (if running locally)
neo4j-data/

# PostgreSQL data (if running locally)
postgres-data/

# IDE files
.vscode/settings.json
.vscode/launch.json
.idea/
*.swp
*.swo
*~

# Certificates and keys
*.pem
*.key
*.crt
*.p12
*.pfx

# Terraform files (if using Infrastructure as Code)
*.tfstate
*.tfstate.*
.terraform/
*.tfvars

# AWS credentials
.aws/

# Google Cloud credentials
*.json
!requirements.txt

# Local configuration
config.local.yaml
config.local.json

# Testing artifacts
.coverage
htmlcov/
.pytest_cache/

# Documentation build
_build/
_static/
_templates/

# Backup files
*.bak
*.backup
*.old

# Lock files (uncomment if you want to ignore them)
# poetry.lock
# Pipfile.lock
# yarn.lock
# package-lock.json

public-transport-mcp-poc
beam-data
**/.venv
**/bin
**/share
